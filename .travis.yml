sudo: false
language: python

addons:
  apt:
    packages:
    - gnutls-bin
    - sharutils
    - nodejs
    - gfortran

cache:
  directories:
  - $HOME/local
  - $HOME/.cask
  - $HOME/node_modules
  - $HOME/.cache/pip
  - $HOME/.evm
  - $HOME/.emacs.d
  - $HOME/Library/Caches/Homebrew
  - $HOME/.pyenv
  - $HOME/Library/Caches/pip

env:
  global:
    - PATH=$HOME/local/bin:$HOME/local/evm/bin:$HOME/local/cask/bin:$HOME/local/R/bin:$HOME/local/julia-1.1.0/bin:$PATH

matrix:
  include:
    - os: linux
      python: 2.7
      env: EVM_EMACS=emacs-25.1-travis IPYTHON=5.8.0
    - dist: trusty
      python: 3.5
      env: EVM_EMACS=emacs-26.1-travis IPYTHON=6.5.0
    - dist: trusty
      python: 3.6
      env: EVM_EMACS=emacs-26.2-travis IPYTHON=7.5.0
    - os: osx
      language: generic
      env: EVM_EMACS=emacs-25.2 IPYTHON=5.8.0 TOXENV=py27

  allow_failures:
    - env: EVM_EMACS=emacs-snapshot

install:
  - cp -pr $HOME/.cask .
  - sh tools/install-virtualenv.sh
  - |
    if [ "x$TRAVIS_OS_NAME" = "xosx" ]; then
      eval "$(pyenv init -)" ;
      pyenv activate $TOXENV ;
    fi
  - pip install jupyter ipython\<=$IPYTHON jedi\<=0.13.3
  - pip install numpy
  - pip install matplotlib
  - |
    if [[ "x$TRAVIS_PYTHON_VERSION" == x3* ]]; then
      pip install jupyterhub ;
      npm install -g configurable-http-proxy ;
      pip install jupyterhub-dummyauthenticator ;
    fi
  - sh tools/install-R.sh
  - sh tools/install-julia.sh
  - jupyter kernelspec list
  - curl --version
  - ipython --version

before_script:
  - sh tools/install-evm.sh
  - |
    if [ "x$TRAVIS_OS_NAME" = "xosx" ]; then
      evm config path $HOME/.evm
    else
      evm config path /tmp
    fi
  - evm install $EVM_EMACS --use --skip
  - emacs --version
  - sh tools/install-cask.sh

script:
  - make test-install
  - |
    if [[ "x$TRAVIS_PYTHON_VERSION" == x3* ]]; then
      make test-jupyterhub
    fi
  - rm -rf $HOME/.matplotlib $HOME/.cache/fontconfig
  - make test || ( ( zip -q - log/{testein,testfunc,ecukes}.* 2>/dev/null | uuencode log.zip ) && ( printf "To diagnose, travis logs -i | dos2unix | sed '/^begin 644/,/^end/!d' | uudecode" ) && false)
