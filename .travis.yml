sudo: false
language: nix

addons:
  apt:
    packages:
    - gnutls-bin
    - sharutils
    - nodejs
    - gfortran
    - python-minimal
    - python-setuptools
    - python-pip
    - python3-minimal
    - python3-pip
    - python3-setuptools
    - gnupg2
    - dirmngr

cache:
  directories:
  - $HOME/nix.store
  - $HOME/local
  - $HOME/.cask
  - $HOME/node_modules
  - $HOME/.cache/pip
  - $HOME/.evm
  - $HOME/.emacs.d
  - $HOME/Library/Caches/Homebrew
  - $HOME/.pyenv
  - $HOME/Library/Caches/pip

env:
  global:
    - PATH=$HOME/local/bin:$HOME/local/evm/bin:$HOME/local/cask/bin:$HOME/local/R/bin:$HOME/local/julia-1.1.0/bin:$PATH

matrix:
  include:
    - os: linux
      env: EMACS_CI=emacs-25-3 IPYTHON=5.8.0 PY=python PIP="${PY} -m pip install --user"
    - os: linux
      env: EMACS_CI=emacs-26-1 IPYTHON=6.5.0 PY=python3 PIP="${PY} -m pip install --user"
    - os: linux
      env: EMACS_CI=emacs-26-3 IPYTHON=7.8.0 PY=python3 PIP="${PY} -m pip install --user"
    - os: osx
      language: generic
      env: EVM_EMACS=emacs-25.2 IPYTHON=5.8.0 PY=python PIP="pip install" TOXENV=py27

  allow_failures:
    - env: EMACS_CI=emacs-snapshot

install:
  - sh tools/install-virtualenv.sh
  - |
    if [ "x$TRAVIS_OS_NAME" = "xosx" ]; then
      eval "$(pyenv init -)" ;
      pyenv activate $TOXENV ;
    fi
  - ${PIP} --upgrade pip
  - ${PIP} wheel jupyter ipython\<=$IPYTHON jedi\>=0.15.1 ipykernel numpy\<=1.16.0 matplotlib\<=3.0.2
  - ${PY} -m ipykernel install --user
  - sh tools/install-R.sh
  - sh tools/install-julia.sh
  - hash -r
  - jupyter kernelspec list
  - curl --version
  - ipython --version

before_script:
  - |
    if [ "x$TRAVIS_OS_NAME" = "xosx" ]; then
      sh tools/install-evm.sh
      evm config path $HOME/.evm
      evm install $EVM_EMACS --use --skip
    else
      bash <(curl https://raw.githubusercontent.com/purcell/nix-emacs-ci/master/travis-install)
    fi
  - emacs --version
  - sh tools/install-cask.sh

script:
  - make test-install
  - |
    if [[ "x$TRAVIS_PYTHON_VERSION" == x3* ]]; then
      ${PIP} jupyterhub ;
      sudo /usr/bin/npm install -g configurable-http-proxy ;
      ${PIP} jupyterhub-dummyauthenticator ;
      make test-jupyterhub
    fi
  - rm -rf $HOME/.matplotlib $HOME/.cache/fontconfig
  - make test || ( ( zip -q - log/{testein,testfunc,ecukes}.* 2>/dev/null | uuencode log.zip ) && ( printf "To diagnose, travis logs -i | dos2unix | sed '/^begin 644/,/^end/!d' | uudecode" ) && false)
